{"version":3,"names":["resolve","a","console","log","nativeEmitter","addListener","sdp","createScreenShareOffer","instanceId","stunTurnJson","Promise","res","rej","nativeCreateScreenShareOffer","e"],"sources":["createScreenShareOffer.tsx"],"sourcesContent":["import { createScreenShareOffer as nativeCreateScreenShareOffer } from '../native-components/BBBN_ScreenShareService';\nimport nativeEmitter from '../native-messaging/emitter';\n\n// Reference to the resolver of last call\nlet resolve = (a: String) => {\n  console.log(\n    `default resolve function called, this should never happen: ${a}`\n  );\n};\n\n// Resolve promise when SDP offer is available\nnativeEmitter.addListener('onScreenShareOfferCreated', (sdp) => {\n  console.log('broadcast onScreenShareOfferCreated');\n  resolve(sdp);\n});\n\n// Entry point of this method\nfunction createScreenShareOffer(instanceId: Number, stunTurnJson: String) {\n  return new Promise((res, rej) => {\n    // store the resolver for later call (when event is received)\n    resolve = res;\n\n    try {\n      console.log(\n        `[${instanceId}] - >nativeCreateScreenShareOffer (${stunTurnJson})`\n      );\n      // call native swift method that triggers the broadcast popup\n      nativeCreateScreenShareOffer(stunTurnJson);\n    } catch (e) {\n      rej(`Call to nativeCreateScreenShareOffer failed`);\n    }\n  });\n}\n\nexport default createScreenShareOffer;\n"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;AACA,IAAIA,OAAO,GAAIC,CAAD,IAAe;EAC3BC,OAAO,CAACC,GAAR,CACG,8DAA6DF,CAAE,EADlE;AAGD,CAJD,C,CAMA;;;AACAG,gBAAA,CAAcC,WAAd,CAA0B,2BAA1B,EAAwDC,GAAD,IAAS;EAC9DJ,OAAO,CAACC,GAAR,CAAY,qCAAZ;EACAH,OAAO,CAACM,GAAD,CAAP;AACD,CAHD,E,CAKA;;;AACA,SAASC,sBAAT,CAAgCC,UAAhC,EAAoDC,YAApD,EAA0E;EACxE,OAAO,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;IAC/B;IACAZ,OAAO,GAAGW,GAAV;;IAEA,IAAI;MACFT,OAAO,CAACC,GAAR,CACG,IAAGK,UAAW,sCAAqCC,YAAa,GADnE,EADE,CAIF;;MACA,IAAAI,+CAAA,EAA6BJ,YAA7B;IACD,CAND,CAME,OAAOK,CAAP,EAAU;MACVF,GAAG,CAAE,6CAAF,CAAH;IACD;EACF,CAbM,CAAP;AAcD;;eAEcL,sB"}