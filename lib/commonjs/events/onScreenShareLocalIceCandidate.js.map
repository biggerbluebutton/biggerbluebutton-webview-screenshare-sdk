{"version":3,"names":["setupListener","_webViewRef","nativeEmitter","addListener","jsonEncodedIceCandidate","iceCandidate","JSON","parse","event","candidate","current","injectJavaScript","stringify"],"sources":["onScreenShareLocalIceCandidate.tsx"],"sourcesContent":["import type { MutableRefObject } from 'react';\nimport type { EmitterSubscription } from 'react-native';\nimport nativeEmitter from '../native-messaging/emitter';\n\nexport function setupListener(\n  _webViewRef: MutableRefObject<any>\n): EmitterSubscription {\n  // Resolve promise when SDP offer is available\n  return nativeEmitter.addListener(\n    'onScreenShareLocalIceCandidate',\n    (jsonEncodedIceCandidate) => {\n      let iceCandidate = JSON.parse(jsonEncodedIceCandidate);\n      if (typeof iceCandidate === 'string') {\n        iceCandidate = JSON.parse(iceCandidate);\n      }\n      const event = { candidate: iceCandidate };\n      _webViewRef.current.injectJavaScript(\n        `window.bbbMobileScreenShareIceCandidateCallback && window.bbbMobileScreenShareIceCandidateCallback(${JSON.stringify(\n          event\n        )});`\n      );\n    }\n  );\n}\n"],"mappings":";;;;;;;AAEA;;;;AAEO,SAASA,aAAT,CACLC,WADK,EAEgB;EACrB;EACA,OAAOC,gBAAA,CAAcC,WAAd,CACL,gCADK,EAEJC,uBAAD,IAA6B;IAC3B,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWH,uBAAX,CAAnB;;IACA,IAAI,OAAOC,YAAP,KAAwB,QAA5B,EAAsC;MACpCA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWF,YAAX,CAAf;IACD;;IACD,MAAMG,KAAK,GAAG;MAAEC,SAAS,EAAEJ;IAAb,CAAd;;IACAJ,WAAW,CAACS,OAAZ,CAAoBC,gBAApB,CACG,sGAAqGL,IAAI,CAACM,SAAL,CACpGJ,KADoG,CAEpG,IAHJ;EAKD,CAbI,CAAP;AAeD"}