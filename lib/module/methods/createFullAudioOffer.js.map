{"version":3,"names":["createFullAudioOffer","nativeCreateFullAudioOffer","nativeEmitter","resolve","a","console","log","addListener","sdp","instanceId","stunTurnJson","Promise","res","rej","e"],"sources":["createFullAudioOffer.tsx"],"sourcesContent":["import { createFullAudioOffer as nativeCreateFullAudioOffer } from '../native-components/BBBN_FullAudioService';\nimport nativeEmitter from '../native-messaging/emitter';\n\n// Reference to the resolver of last call\nlet resolve = (a: String) => {\n  console.log(\n    `default resolve function called, this should never happen: ${a}`\n  );\n};\n\n// Resolve promise when SDP offer is available\nnativeEmitter.addListener('onFullAudioOfferCreated', (sdp) => {\n  resolve(sdp);\n});\n\n// Entry point of this method\nfunction createFullAudioOffer(instanceId: Number, stunTurnJson: String) {\n  return new Promise((res, rej) => {\n    // store the resolver for later call (when event is received)\n    resolve = res;\n\n    try {\n      console.log(\n        `[${instanceId}] - >nativeCreateFullAudioOffer (${stunTurnJson})`\n      );\n      // call native swift method that triggers the broadcast popup\n      nativeCreateFullAudioOffer(stunTurnJson);\n    } catch (e) {\n      rej(`Call to nativeCreateFullAudioOffer failed`);\n    }\n  });\n}\n\nexport default createFullAudioOffer;\n"],"mappings":"AAAA,SAASA,oBAAoB,IAAIC,0BAAjC,QAAmE,4CAAnE;AACA,OAAOC,aAAP,MAA0B,6BAA1B,C,CAEA;;AACA,IAAIC,OAAO,GAAIC,CAAD,IAAe;EAC3BC,OAAO,CAACC,GAAR,CACG,8DAA6DF,CAAE,EADlE;AAGD,CAJD,C,CAMA;;;AACAF,aAAa,CAACK,WAAd,CAA0B,yBAA1B,EAAsDC,GAAD,IAAS;EAC5DL,OAAO,CAACK,GAAD,CAAP;AACD,CAFD,E,CAIA;;AACA,SAASR,oBAAT,CAA8BS,UAA9B,EAAkDC,YAAlD,EAAwE;EACtE,OAAO,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;IAC/B;IACAV,OAAO,GAAGS,GAAV;;IAEA,IAAI;MACFP,OAAO,CAACC,GAAR,CACG,IAAGG,UAAW,oCAAmCC,YAAa,GADjE,EADE,CAIF;;MACAT,0BAA0B,CAACS,YAAD,CAA1B;IACD,CAND,CAME,OAAOI,CAAP,EAAU;MACVD,GAAG,CAAE,2CAAF,CAAH;IACD;EACF,CAbM,CAAP;AAcD;;AAED,eAAeb,oBAAf"}