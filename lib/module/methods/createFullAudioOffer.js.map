{"version":3,"names":["createFullAudioOffer","nativeCreateFullAudioOffer","nativeEmitter","resolve","a","console","log","addListener","sdp","instanceId","stunTurnJson","Promise","res","rej","e"],"sources":["createFullAudioOffer.tsx"],"sourcesContent":["import { createFullAudioOffer as nativeCreateFullAudioOffer } from '../native-components/BBBN_FullAudioService';\nimport nativeEmitter from '../native-messaging/emitter';\n\n// Reference to the resolver of last call\nlet resolve = (a: String) => {\n  console.log(\n    `default resolve function called, this should never happen: ${a}`\n  );\n};\n\n// Resolve promise when SDP offer is available\nnativeEmitter.addListener('onFullAudioOfferCreated', (sdp) => {\n  resolve(sdp);\n});\n\n// Entry point of this method\nfunction createFullAudioOffer(instanceId: Number, stunTurnJson: String) {\n  return new Promise((res, rej) => {\n    // store the resolver for later call (when event is received)\n    resolve = res;\n\n    try {\n      console.log(\n        `[${instanceId}] - >nativeCreateFullAudioOffer (${stunTurnJson})`\n      );\n      // call native swift method that triggers the broadcast popup\n      nativeCreateFullAudioOffer(stunTurnJson);\n    } catch (e) {\n      rej(`Call to nativeCreateFullAudioOffer failed`);\n    }\n  });\n}\n\nexport default createFullAudioOffer;\n"],"mappings":"AAAA,SAASA,oBAAoB,IAAIC,0BAA0B,QAAQ,4CAA4C;AAC/G,OAAOC,aAAa,MAAM,6BAA6B;;AAEvD;AACA,IAAIC,OAAO,GAAIC,CAAS,IAAK;EAC3BC,OAAO,CAACC,GAAG,CACT,8DAA8DF,CAAC,EACjE,CAAC;AACH,CAAC;;AAED;AACAF,aAAa,CAACK,WAAW,CAAC,yBAAyB,EAAGC,GAAG,IAAK;EAC5DL,OAAO,CAACK,GAAG,CAAC;AACd,CAAC,CAAC;;AAEF;AACA,SAASR,oBAAoBA,CAACS,UAAkB,EAAEC,YAAoB,EAAE;EACtE,OAAO,IAAIC,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;IAC/B;IACAV,OAAO,GAAGS,GAAG;IAEb,IAAI;MACFP,OAAO,CAACC,GAAG,CACT,IAAIG,UAAU,oCAAoCC,YAAY,GAChE,CAAC;MACD;MACAT,0BAA0B,CAACS,YAAY,CAAC;IAC1C,CAAC,CAAC,OAAOI,CAAC,EAAE;MACVD,GAAG,CAAC,2CAA2C,CAAC;IAClD;EACF,CAAC,CAAC;AACJ;AAEA,eAAeb,oBAAoB","ignoreList":[]}