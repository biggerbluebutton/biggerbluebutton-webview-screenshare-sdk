{"version":3,"names":["stopScreenShareBroadcastExtension","nativeStopScreenShare","nativeEmitter","resolve","a","console","log","addListener","stopScreenShare","instanceId","Promise","res","rej","e"],"sources":["stopScreenShare.tsx"],"sourcesContent":["import { stopScreenShareBroadcastExtension as nativeStopScreenShare } from '../native-components/BBBN_ScreenShareService';\nimport nativeEmitter from '../native-messaging/emitter';\n\n// Reference to the resolver of last call\nlet resolve = (a: String | null) => {\n  console.log(\n    `default resolve function called, this should never happen: ${a}`\n  );\n};\n\n// Resolve promise when broadcast is started (this event means that user confirmed the screenshare)\nnativeEmitter.addListener('onBroadcastFinished', () => {\n  resolve(null);\n});\n\n// Entry point of this method\nfunction stopScreenShare(instanceId: Number) {\n  return new Promise((res, rej) => {\n    // store the resolver for later call (when event is received)\n    resolve = res;\n\n    try {\n      // call native swift method that triggers the broadcast popup\n      console.log(`[${instanceId}] - >stopScreenShare`);\n      nativeStopScreenShare();\n    } catch (e) {\n      rej(`Call to stopScreenShare failed zzy`);\n    }\n  });\n}\n\nexport default stopScreenShare;\n"],"mappings":"AAAA,SAASA,iCAAiC,IAAIC,qBAAqB,QAAQ,8CAA8C;AACzH,OAAOC,aAAa,MAAM,6BAA6B;;AAEvD;AACA,IAAIC,OAAO,GAAIC,CAAgB,IAAK;EAClCC,OAAO,CAACC,GAAG,CACT,8DAA8DF,CAAC,EACjE,CAAC;AACH,CAAC;;AAED;AACAF,aAAa,CAACK,WAAW,CAAC,qBAAqB,EAAE,MAAM;EACrDJ,OAAO,CAAC,IAAI,CAAC;AACf,CAAC,CAAC;;AAEF;AACA,SAASK,eAAeA,CAACC,UAAkB,EAAE;EAC3C,OAAO,IAAIC,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;IAC/B;IACAT,OAAO,GAAGQ,GAAG;IAEb,IAAI;MACF;MACAN,OAAO,CAACC,GAAG,CAAC,IAAIG,UAAU,sBAAsB,CAAC;MACjDR,qBAAqB,CAAC,CAAC;IACzB,CAAC,CAAC,OAAOY,CAAC,EAAE;MACVD,GAAG,CAAC,oCAAoC,CAAC;IAC3C;EACF,CAAC,CAAC;AACJ;AAEA,eAAeJ,eAAe","ignoreList":[]}