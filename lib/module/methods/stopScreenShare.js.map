{"version":3,"names":["stopScreenShareBroadcastExtension","nativeStopScreenShare","nativeEmitter","resolve","a","console","log","addListener","stopScreenShare","instanceId","Promise","res","rej","e"],"sources":["stopScreenShare.tsx"],"sourcesContent":["import { stopScreenShareBroadcastExtension as nativeStopScreenShare } from '../native-components/BBBN_ScreenShareService';\nimport nativeEmitter from '../native-messaging/emitter';\n\n// Reference to the resolver of last call\nlet resolve = (a: String | null) => {\n  console.log(\n    `default resolve function called, this should never happen: ${a}`\n  );\n};\n\n// Resolve promise when broadcast is started (this event means that user confirmed the screenshare)\nnativeEmitter.addListener('onBroadcastFinished', () => {\n  resolve(null);\n});\n\n// Entry point of this method\nfunction stopScreenShare(instanceId: Number) {\n  return new Promise((res, rej) => {\n    // store the resolver for later call (when event is received)\n    resolve = res;\n\n    try {\n      // call native swift method that triggers the broadcast popup\n      console.log(`[${instanceId}] - >stopScreenShare`);\n      nativeStopScreenShare();\n    } catch (e) {\n      rej(`Call to stopScreenShare failed zzy`);\n    }\n  });\n}\n\nexport default stopScreenShare;\n"],"mappings":"AAAA,SAASA,iCAAiC,IAAIC,qBAA9C,QAA2E,8CAA3E;AACA,OAAOC,aAAP,MAA0B,6BAA1B,C,CAEA;;AACA,IAAIC,OAAO,GAAIC,CAAD,IAAsB;EAClCC,OAAO,CAACC,GAAR,CACG,8DAA6DF,CAAE,EADlE;AAGD,CAJD,C,CAMA;;;AACAF,aAAa,CAACK,WAAd,CAA0B,qBAA1B,EAAiD,MAAM;EACrDJ,OAAO,CAAC,IAAD,CAAP;AACD,CAFD,E,CAIA;;AACA,SAASK,eAAT,CAAyBC,UAAzB,EAA6C;EAC3C,OAAO,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;IAC/B;IACAT,OAAO,GAAGQ,GAAV;;IAEA,IAAI;MACF;MACAN,OAAO,CAACC,GAAR,CAAa,IAAGG,UAAW,sBAA3B;MACAR,qBAAqB;IACtB,CAJD,CAIE,OAAOY,CAAP,EAAU;MACVD,GAAG,CAAE,oCAAF,CAAH;IACD;EACF,CAXM,CAAP;AAYD;;AAED,eAAeJ,eAAf"}