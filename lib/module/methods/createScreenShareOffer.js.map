{"version":3,"names":["createScreenShareOffer","nativeCreateScreenShareOffer","nativeEmitter","resolve","a","console","log","addListener","sdp","instanceId","stunTurnJson","Promise","res","rej","e"],"sources":["createScreenShareOffer.tsx"],"sourcesContent":["import { createScreenShareOffer as nativeCreateScreenShareOffer } from '../native-components/BBBN_ScreenShareService';\nimport nativeEmitter from '../native-messaging/emitter';\n\n// Reference to the resolver of last call\nlet resolve = (a: String) => {\n  console.log(\n    `default resolve function called, this should never happen: ${a}`\n  );\n};\n\n// Resolve promise when SDP offer is available\nnativeEmitter.addListener('onScreenShareOfferCreated', (sdp) => {\n  console.log('broadcast onScreenShareOfferCreated');\n  resolve(sdp);\n});\n\n// Entry point of this method\nfunction createScreenShareOffer(instanceId: Number, stunTurnJson: String) {\n  return new Promise((res, rej) => {\n    // store the resolver for later call (when event is received)\n    resolve = res;\n\n    try {\n      console.log(\n        `[${instanceId}] - >nativeCreateScreenShareOffer (${stunTurnJson})`\n      );\n      // call native swift method that triggers the broadcast popup\n      nativeCreateScreenShareOffer(stunTurnJson);\n    } catch (e) {\n      rej(`Call to nativeCreateScreenShareOffer failed`);\n    }\n  });\n}\n\nexport default createScreenShareOffer;\n"],"mappings":"AAAA,SAASA,sBAAsB,IAAIC,4BAA4B,QAAQ,8CAA8C;AACrH,OAAOC,aAAa,MAAM,6BAA6B;;AAEvD;AACA,IAAIC,OAAO,GAAIC,CAAS,IAAK;EAC3BC,OAAO,CAACC,GAAG,CACT,8DAA8DF,CAAC,EACjE,CAAC;AACH,CAAC;;AAED;AACAF,aAAa,CAACK,WAAW,CAAC,2BAA2B,EAAGC,GAAG,IAAK;EAC9DH,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;EAClDH,OAAO,CAACK,GAAG,CAAC;AACd,CAAC,CAAC;;AAEF;AACA,SAASR,sBAAsBA,CAACS,UAAkB,EAAEC,YAAoB,EAAE;EACxE,OAAO,IAAIC,OAAO,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;IAC/B;IACAV,OAAO,GAAGS,GAAG;IAEb,IAAI;MACFP,OAAO,CAACC,GAAG,CACT,IAAIG,UAAU,sCAAsCC,YAAY,GAClE,CAAC;MACD;MACAT,4BAA4B,CAACS,YAAY,CAAC;IAC5C,CAAC,CAAC,OAAOI,CAAC,EAAE;MACVD,GAAG,CAAC,6CAA6C,CAAC;IACpD;EACF,CAAC,CAAC;AACJ;AAEA,eAAeb,sBAAsB","ignoreList":[]}