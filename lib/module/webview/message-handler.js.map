{"version":3,"names":["initializeScreenShare","createScreenShareOffer","setScreenShareRemoteSDP","setFullAudioRemoteSDP","addScreenShareRemoteIceCandidate","createFullAudioOffer","stopScreenShare","observePromiseResult","instanceId","webViewRef","sequence","prom","then","result","console","log","current","injectJavaScript","JSON","stringify","catch","exception","error","handleWebviewMessage","event","setCallState","_event$nativeEvent","stringData","nativeEvent","data","parse","method","promise","arguments","sdp"],"sources":["message-handler.tsx"],"sourcesContent":["import type { MutableRefObject } from 'react';\nimport type { WebView, WebViewMessageEvent } from 'react-native-webview';\nimport initializeScreenShare from '../methods/initializeScreenShare';\nimport createScreenShareOffer from '../methods/createScreenShareOffer';\nimport setScreenShareRemoteSDP from '../methods/setScreenShareRemoteSDP';\nimport setFullAudioRemoteSDP from '../methods/setFullAudioRemoteSDP';\nimport addScreenShareRemoteIceCandidate from '../methods/addScreenShareRemoteIceCandidate';\nimport createFullAudioOffer from '../methods/createFullAudioOffer';\nimport stopScreenShare from '../methods/stopScreenShare';\n\nfunction observePromiseResult(\n  instanceId: Number,\n  webViewRef: MutableRefObject<WebView>,\n  sequence: number,\n  prom: Promise<any>\n) {\n  prom\n    .then((result: any) => {\n      console.log(`[${instanceId}] - Promise ${sequence} resolved!`, result);\n\n      webViewRef.current.injectJavaScript(\n        `window.nativeMethodCallResult(${sequence}, true ${\n          result ? ',' + JSON.stringify(result) : ''\n        });`\n      );\n    })\n    .catch((exception: any) => {\n      console.error(`[${instanceId}] - Promise ${sequence} failed!`, exception);\n      webViewRef.current.injectJavaScript(\n        `window.nativeMethodCallResult(${sequence}, false ${\n          exception ? ',' + JSON.stringify(exception) : ''\n        });`\n      );\n    });\n}\n\nexport function handleWebviewMessage(\n  instanceId: Number,\n  webViewRef: MutableRefObject<any>,\n  event: WebViewMessageEvent,\n  setCallState?: any\n) {\n  const stringData = event?.nativeEvent?.data;\n  const data = JSON.parse(stringData);\n  console.log('handleWebviewMessage - ', instanceId);\n\n  setCallState(data?.method);\n  if (data?.method && data?.sequence) {\n    let promise;\n    switch (data?.method) {\n      case 'initializeScreenShare':\n        promise = initializeScreenShare(instanceId);\n        break;\n      case 'createFullAudioOffer':\n        promise = createFullAudioOffer(\n          instanceId,\n          JSON.stringify(data?.arguments[0])\n        );\n        break;\n      case 'createScreenShareOffer':\n        promise = createScreenShareOffer(\n          instanceId,\n          JSON.stringify(data?.arguments[0])\n        );\n        break;\n      case 'setScreenShareRemoteSDP':\n        promise = setScreenShareRemoteSDP(instanceId, data?.arguments[0].sdp);\n        break;\n      case 'setFullAudioRemoteSDP':\n        promise = setFullAudioRemoteSDP(instanceId, data?.arguments[0].sdp);\n        break;\n      case 'addRemoteIceCandidate':\n        promise = addScreenShareRemoteIceCandidate(\n          instanceId,\n          JSON.stringify(data?.arguments[0])\n        );\n        break;\n      case 'stopScreenShare':\n        promise = stopScreenShare(instanceId);\n        break;\n      default:\n        throw `[${instanceId}] - Unknown method ${data?.method}`;\n    }\n    observePromiseResult(instanceId, webViewRef, data.sequence, promise);\n  } else {\n    console.log(`[${instanceId}] - Ignoring unknown message: $stringData`);\n  }\n}\n\nexport default { handleWebviewMessage };\n"],"mappings":"AAEA,OAAOA,qBAAqB,MAAM,kCAAkC;AACpE,OAAOC,sBAAsB,MAAM,mCAAmC;AACtE,OAAOC,uBAAuB,MAAM,oCAAoC;AACxE,OAAOC,qBAAqB,MAAM,kCAAkC;AACpE,OAAOC,gCAAgC,MAAM,6CAA6C;AAC1F,OAAOC,oBAAoB,MAAM,iCAAiC;AAClE,OAAOC,eAAe,MAAM,4BAA4B;AAExD,SAASC,oBAAoBA,CAC3BC,UAAkB,EAClBC,UAAqC,EACrCC,QAAgB,EAChBC,IAAkB,EAClB;EACAA,IAAI,CACDC,IAAI,CAAEC,MAAW,IAAK;IACrBC,OAAO,CAACC,GAAG,CAAC,IAAIP,UAAU,eAAeE,QAAQ,YAAY,EAAEG,MAAM,CAAC;IAEtEJ,UAAU,CAACO,OAAO,CAACC,gBAAgB,CACjC,iCAAiCP,QAAQ,UACvCG,MAAM,GAAG,GAAG,GAAGK,IAAI,CAACC,SAAS,CAACN,MAAM,CAAC,GAAG,EAAE,IAE9C,CAAC;EACH,CAAC,CAAC,CACDO,KAAK,CAAEC,SAAc,IAAK;IACzBP,OAAO,CAACQ,KAAK,CAAC,IAAId,UAAU,eAAeE,QAAQ,UAAU,EAAEW,SAAS,CAAC;IACzEZ,UAAU,CAACO,OAAO,CAACC,gBAAgB,CACjC,iCAAiCP,QAAQ,WACvCW,SAAS,GAAG,GAAG,GAAGH,IAAI,CAACC,SAAS,CAACE,SAAS,CAAC,GAAG,EAAE,IAEpD,CAAC;EACH,CAAC,CAAC;AACN;AAEA,OAAO,SAASE,oBAAoBA,CAClCf,UAAkB,EAClBC,UAAiC,EACjCe,KAA0B,EAC1BC,YAAkB,EAClB;EAAA,IAAAC,kBAAA;EACA,MAAMC,UAAU,GAAGH,KAAK,aAALA,KAAK,gBAAAE,kBAAA,GAALF,KAAK,CAAEI,WAAW,cAAAF,kBAAA,uBAAlBA,kBAAA,CAAoBG,IAAI;EAC3C,MAAMA,IAAI,GAAGX,IAAI,CAACY,KAAK,CAACH,UAAU,CAAC;EACnCb,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEP,UAAU,CAAC;EAElDiB,YAAY,CAACI,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,MAAM,CAAC;EAC1B,IAAIF,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEE,MAAM,IAAIF,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEnB,QAAQ,EAAE;IAClC,IAAIsB,OAAO;IACX,QAAQH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,MAAM;MAClB,KAAK,uBAAuB;QAC1BC,OAAO,GAAGhC,qBAAqB,CAACQ,UAAU,CAAC;QAC3C;MACF,KAAK,sBAAsB;QACzBwB,OAAO,GAAG3B,oBAAoB,CAC5BG,UAAU,EACVU,IAAI,CAACC,SAAS,CAACU,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,SAAS,CAAC,CAAC,CAAC,CACnC,CAAC;QACD;MACF,KAAK,wBAAwB;QAC3BD,OAAO,GAAG/B,sBAAsB,CAC9BO,UAAU,EACVU,IAAI,CAACC,SAAS,CAACU,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,SAAS,CAAC,CAAC,CAAC,CACnC,CAAC;QACD;MACF,KAAK,yBAAyB;QAC5BD,OAAO,GAAG9B,uBAAuB,CAACM,UAAU,EAAEqB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,SAAS,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;QACrE;MACF,KAAK,uBAAuB;QAC1BF,OAAO,GAAG7B,qBAAqB,CAACK,UAAU,EAAEqB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,SAAS,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;QACnE;MACF,KAAK,uBAAuB;QAC1BF,OAAO,GAAG5B,gCAAgC,CACxCI,UAAU,EACVU,IAAI,CAACC,SAAS,CAACU,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,SAAS,CAAC,CAAC,CAAC,CACnC,CAAC;QACD;MACF,KAAK,iBAAiB;QACpBD,OAAO,GAAG1B,eAAe,CAACE,UAAU,CAAC;QACrC;MACF;QACE,MAAM,IAAIA,UAAU,sBAAsBqB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,MAAM,EAAE;IAC5D;IACAxB,oBAAoB,CAACC,UAAU,EAAEC,UAAU,EAAEoB,IAAI,CAACnB,QAAQ,EAAEsB,OAAO,CAAC;EACtE,CAAC,MAAM;IACLlB,OAAO,CAACC,GAAG,CAAC,IAAIP,UAAU,2CAA2C,CAAC;EACxE;AACF;AAEA,eAAe;EAAEe;AAAqB,CAAC","ignoreList":[]}